/*
Web Storage 란?
HTML5부터 제공하는 기능으로 해당 도메인과 관련된 특정데이터를 서버가 아니라 클라이언트 웹브라우저에 저장할 수 있도록 제공하는 기능입니다. 우리가 알고 있는 쿠키(cookie) 와 비슷한 기능인거죠. 

1. 쿠키의 단점을 보완해 HTML5에서 '웹스토리지'라는 기술 탄생.
	1-1) 웹스토리지 : 로컬스토리지, 세션스토리지.

	1-2) 웹스토리지는 Key와 Value 형태로 이루어짐.

	1-3) 웹스토리지는 클라이언트에 대한 정보를 저장.

	1-4) 웹스토리지는 로컬에만 정보를 저장, 쿠키는 서버와 로컬에 정보를 저장.

2. 로컬스토리지는 클라이언트에 대한 정보를 영구적으로 저장

3. 세션스토리지는 세션 종료 시(브라우저 닫을 경우) 클라이언트에 대한 정보 삭제
	ex) 입력 폼 정보 저장
	3-1) 로컬&세션스토리지 장점1 : 서버에 불필요하게 데이터를 저장하지 않는다.

	3-2) 로컬&세션스토리지 장점2 : 용량이 크다. (약 5Mb, 브라우저마다 차이 존재)

	3-3) 로컬&세션스토리지 단점 : HTML5를 지원하지 않는 브라우저의 경우 사용 불가
	
4. 쿠키는 만료 기한이 있는 Key, Value 형태의 저장소
	4-1) 쿠키 장점 : 대부분의 브라우저가 지원

	4-2) 쿠키 단점1 : 매 HTTP요청마다 포함되어 api호출로 서버에 부담.

	4-3) 쿠키 단점2 : 쿠키의 용량이 작음 (약 4Kb)

	4-4) 쿠키 단점3 : 암호화 존재 x -> 사용자 정보 도난 위험
 

Web Storage가 필요한 이유?
쿠키와 Web Storage 모두 브라우저에 저장되기는 하지만 쿠키는 아래와 같은 단점이 있기 때문에 Web Storage를 사용합니다.

4KB의 데이터 저장 제한
HTTP Request에 암호화 되지 않은 상태로 사용하기 때문에 보안에 취약
쿠키는 모든 HTTP Request에 포함되어 있어 웹서비스 성능에 영향을 줄 수 있음
 

Web Storage 종류
기존에 우리가 흔히 사용했던 쿠키와 세션(Session) 처럼 Web Storage도 localStorage와 sessionStorage를 제공합니다. sessionStorage라고 해서 기존 세션처럼 서버에 저장된다고 생각할 수 있지만 sessionStorage도 로컬 브라우저에 저장됩니다. 다만 생명주기가 localStorage와 sessionStorage가 서로 다르다고 생각하면 됩니다.

 

localStorage : 브라우저를 닫았다가 다시 열어도 계속 유지
sessionStorage : 브라우저가 열려있는 한 페이지를 Reload 해도 계속 유지. 하지만 브라우저를 닫으면 삭제됨
*/

//특정 데이터만 삭제
window.localStorage.removeItem('키 값(JSON 형태)');

//전체 삭제
window.localStorage.clear();
